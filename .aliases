# kubernetes
function k8s_context {
    kubectl config use-context $1
    echo "Context changed to $1"
}

function k8s_namespace {
    kubectl config set-context --current --namespace=$1
    echo "Namespace changed to $1"
}

function k8s_pods {
    kubectl get pods | grep $1
}

function k8s_pod {
    kubectl get pods | grep $1 | head -n1 | awk '{print $1}'
}

alias kc='kubectl'
alias kx='k8s_context'
alias kn='k8s_namespace'
alias kp='k8s_pod'
alias kps='k8s_pods'

# chat gpt
function chatgpt {
    curl -s https://api.openai.com/v1/chat/completions \
        -H "Authorization: Bearer $OPENAI_API_KEY" \
        -H "Content-Type: application/json" \
        -d "{
            \"model\": \"gpt-3.5-turbo\",
            \"messages\": [
                {\"role\": \"system\", \"content\": \"You are a helpful assistant that runs inside my terminal. Answer as concisely as possible.\"},
                {\"role\": \"user\", \"content\": \"$*\"}
            ]
        }" | jq -r '.choices[0].message.content'
}

alias c='chatgpt'

# git
alias gc="git commit -v --no-verify"
alias gp='git push origin "$(git_current_branch)"'
alias gl='git pull origin "$(git_current_branch)"'

unalias ggpush 2>/dev/null
unalias ggpull 2>/dev/null

alias gcl="git checkout master && git pull origin master && git branch --merged | grep -v '*' | grep -v 'master' | xargs git branch -d && git remote prune origin"
alias gclm="git checkout main && git pull origin main && git branch --merged | grep -v '*' | grep -v 'main' | xargs git branch -d && git remote prune origin"

# vim
alias vi=$VIM_VERSION
alias vim=$VIM_VERSION

# json
function json_format () { jq -C . | less -R; }
alias jf="json_format"
alias je="jq -c '.[]'"

# source local aliases
[ -f "$HOME/.aliases.local" ] && source "$HOME/.aliases.local"
