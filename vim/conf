""
"" Plugins
""
call plug#begin('~/.vim/plugins')
Plug 'junegunn/vim-easy-align'
Plug 'tpope/vim-rails'
Plug 'sheerun/vim-polyglot'
Plug 'tpope/vim-markdown'
Plug 'vim-airline/vim-airline' " very useful fixed bar
Plug 'terryma/vim-multiple-cursors' " multiple cursor edition
Plug 'junegunn/fzf.vim' " fuzzyfinder plugin for vim
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all'  }
Plug 'neomake/neomake' " allow me to run linters and etc after saving a file
Plug 'scrooloose/nerdtree' " filesystem explorer
Plug 'rbgrouleff/bclose.vim'
Plug 'brendonrapp/smyck-vim' " fucking beautiful color scheme
Plug 'Shougo/vimproc.vim', {'do' : 'make'} " required for phpcomplete-extend
Plug 'Shougo/unite.vim'
Plug 'm2mdas/phpcomplete-extended'
Plug 'stanangeloff/php.vim'
Plug 'ervandew/supertab'
call plug#end()


""
"" Variables
""
let mapleader = "-"

" nerdtree
let NERDTreeQuitOnOpen = 1
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let NERDTreeShowHidden = 0
let NERDTreeChDirMode = 1
let NERDTreeDirArrowExpandable = '+'
let NERDTreeDirArrowCollapsible = '~'

" jslint
let g:neomake_javascript_jshint_maker = {
      \ 'args': ['--verbose'],
      \ 'errorformat': '%A%f: line %l\, col %v\, %m \(%t%*\d\)',
    \ }


" makes supertab use omnicompletion functions
let g:SuperTabDefaultCompletionType = "<c-x><c-o>"

""
"" Basic configuration
""
set hidden
set number
set cursorline
set ruler
set splitbelow " open new splits below
set splitright " open new splits at the right
set switchbuf=usetab
set colorcolumn=100
set encoding=utf-8
set langmenu=en_US.UTF-8
set term=screen-256color
set nocompatible " we're running Vim, not Vi!
set ignorecase

" autocomple
set completeopt=longest,menuone

" wildmenu
set wildmenu
set wildignore+=*.o,*.out,*.obj,.git,*.rbc,*.rbo,*.class,.svn,*.gem,*.log,*.cache
set wildignore+=*.zip,*.tar.gz,*.tar.bz2,*.rar,*.tar.xz
set wildignore+=*/vendor/gems/*,*/vendor/cache/*,*/.bundle/*,*/.sass-cache/*
set wildignore+=*/tmp/librarian/*,*/.vagrant/*,*/.kitchen/*,*/vendor/cookbooks/*
set wildignore+=*/tmp/cache/assets/*/sprockets/*,*/tmp/cache/assets/*/sass/*
set wildignore+=*.swp,*~,._*

" whitespace
set nowrap " break line after it reachs the limit
set expandtab " use spaces, not tabs
set backspace=indent,eol,start " backspace through everything in insert mode

" search
set incsearch   " incremental searching
set ignorecase  " searches are case insensitive...
set smartcase   " ... unless they contain at least one capital letter


" allow gf to work with PHP namespaced classes.
set path+=**
set includeexpr=substitute(v:fname,'\\\','/','g')
set suffixesadd+=.php

""
"" Languages
""
syntax on             " enable syntax highlighting
filetype on           " enable filetype detection
filetype indent on    " enable filetype-specific indenting
filetype plugin on    " enable filetype-specific plugins


""
"" Keymapping
""
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>
nnoremap <leader>f :FZF<cr>
nnoremap <leader>sh :History:<cr>

" buffers
nnoremap <leader><backspace> :Bclose<CR>
nnoremap <F8> :bnext<CR>
nnoremap <S-F8> :bprevious<CR>
nnoremap <C-left> :tabp<cr>
nnoremap <C-right> :tabn<cr>
nnoremap <C-e> :NERDTreeToggle<cr>
nnoremap <C-f> :NERDTreeFind<cr>

" autocomplete
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"

inoremap <expr> <C-n> pumvisible() ? '<C-n>' :
  \ '<C-n><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'

inoremap <expr> <M-,> pumvisible() ? '<C-n>' :
  \ '<C-x><C-o><C-n><C-p><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'

" tmux will send xterm-style keys when its xterm-keys option is on
if &term =~ '^screen'
  execute "set <xUp>=\e[1;*A"
  execute "set <xDown>=\e[1;*B"
  execute "set <xRight>=\e[1;*C"
  execute "set <xLeft>=\e[1;*D"
endif

""
"" Commands
""
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
autocmd BufWritePre * :%s/\s\+$//e " strips white spaces on save

" languagues
autocmd FileType * set tabstop=2|set shiftwidth=2
autocmd FileType python set tabstop=4|set shiftwidth=4
autocmd FileType ruby set tabstop=2|set shiftwidth=2
autocmd FileType xml set tabstop=4|set shiftwidth=4

" php
autocmd FileType php set tabstop=4|set shiftwidth=4
autocmd FileType php setlocal omnifunc=phpcomplete_extended#CompletePHP

" automatically resize splits when resizing MacVim window
autocmd VimResized * wincmd =

" neomake
autocmd! BufReadPost,BufWritePost * Neomake

" php.vim
function! PhpSyntaxOverride()
  hi! def link phpDocTags  phpDefine
  hi! def link phpDocParam phpType
endfunction

augroup phpSyntaxOverride
  autocmd!
  autocmd FileType php call PhpSyntaxOverride()
augroup END


""
"" Appearance
""
color smyck
highlight ColorColumn guibg=#303030 ctermbg=0
